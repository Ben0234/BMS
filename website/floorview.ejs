<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <%- include("./header") %>
  </head>
  <body>
    <div>
      <canvas
        id="shadeCanvas"
        style="
          position: absolute;
          top: 50px;
          left: 2px;
          z-index: -5;
          width: 600px;
          height: 400px;
        "
      ></canvas>
      <img
        src=""
        alt=""
        id="floorplan"
        style="position: absolute; top: 0; left: 0"
        usemap="#testmap"
      />
    </div>
    <br />
    <button onclick="increaseTemp()">Increase temperature</button>
    <button onclick="decreaseTemp()">Decrease temperature</button>

    <map name="testmap" id="testmap">
      <area shape="rect" id="rect1" coords="0,0,100,100" href="" alt="" />
    </map>

    <script>
      var temp = [23, 24, 29];
      var zones;
      var imagemap = document.getElementById("testmap");
      var ejsData = <%- JSON.stringify(data) %>;
      var floorplan = ejsData[0].floorplan;

      var shadeCanvas = document.getElementById("shadeCanvas");
      var ctx = shadeCanvas.getContext("2d");

      var image = document.querySelector("img");
      image.src = floorplan;
      zones = ejsData[0].zones;

      function createArea() {
          for (var zone in zones) {
              var coordinates = zones[zone];
              var area = document.createElement("area");
              area.setAttribute("shape", "rect");
              area.setAttribute(
                  "coords",
                  coordinates.startX +
                  "," +
                  coordinates.startY +
                  "," +
                  coordinates.endX +
                  "," +
                  coordinates.endY
              );
              area.setAttribute("href", "#");
              area.setAttribute("id", zones[zone].name);
              imagemap.appendChild(area);
              console.log(zone, "mapped!");
          }
      }

      function increaseTemp() {
          temp[0] += 1;
          updatetemperature();
      }

      function decreaseTemp() {
          temp[0] -= 1;
          updatetemperature();
      }

      $("img").mapster({
          showToolTip: true,
          mapKey: "id",
          areas: [
              {
                  key: "rect1",
                  toolTip: "test tooltip",
              },
          ],
      });

      function updatetemperature() {
          ctx.clearRect(0, 0, shadeCanvas.width, shadeCanvas.height);
          for (var zone in zones) {
              var areaOptions = {
                  key: zones[zone].name,
                  toolTip: "temperature is " + temp[zone] + "C"
              };
              $("img").mapster('set_options', {
                  areas: [
                      {
                          key: areaOptions.key,
                          toolTip: areaOptions.toolTip,
                      },
                  ],
              });

              var zonePosition = zones[zone];
              var startX = (zonePosition.startX / 600) * shadeCanvas.width;
              var startY = (zonePosition.startY / 400) * shadeCanvas.height;
              var endX = (zonePosition.endX / 600) * shadeCanvas.width;
              var endY = (zonePosition.endY / 400) * shadeCanvas.height;

              var temperatureGradient = (temp[zone] - 20) / (30 - 20);
              var red = Math.round(255 * temperatureGradient);
              var blue = Math.round(255 * (1 - temperatureGradient));
              ctx.fillStyle = "rgba(" + red + ", 0, " + blue + ", 0.5)";

              ctx.beginPath();
              if (endX > startX) {
                  var width = Math.abs(endX - startX);
                  if (endY > startY) {
                    var height = Math.abs(endY - startY);
                    ctx.rect(startX, startY, width, height);
                  } else {
                    var height = Math.abs(startY - endY);
                    ctx.rect(startX, endY, width, height);
                  }
                } else {
                  var width = Math.abs(startX - endX);
                  if (endY > startY) {
                    var height = Math.abs(endY - startY);
                    ctx.rect(endX, startY, width, height);
                  } else {
                    var height = Math.abs(startY - endY);
                    ctx.rect(endX, endY, width, height);
                  }
                }
              ctx.fill();
          }
      }

      createArea();
      updatetemperature();
    </script>
  </body>
</html>
